@page "/competitions"
@using Models
@inject BlazorApp.Services.CompetitionService CompetitionService
@inject NavigationManager NavigationManager
<div class="main-header-div">
    <h1 class="main-header">Соревнования</h1>
</div>


<RadzenButton Icon="add_circle_outline" class="primary-button m" Text="Добавить" Click="@InsertRow" />
<RadzenGrid @ref="competitionGrid" AllowFiltering="true"  AllowPaging="true" PageSize="10"
            AllowSorting="true" Data="competitions" TItem="Competition" AllowColumnResize="true" SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@multipleValues
            RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow">
    <Columns>
        <RadzenGridColumn TItem="Competition" Width="40px" Sortable="false" Filterable="false">
            <HeaderTemplate>
                <RadzenCheckBox TriState="false" TValue="bool" Value="@(competitions.Any(i => multipleValues != null && (multipleValues as IEnumerable<Competition>).Contains(i)))"
                                Change="@(args => multipleValues = args ? competitions : null)" />
            </HeaderTemplate>
            <Template Context="data">
                <RadzenCheckBox TriState="false" Value="@(multipleValues != null && (multipleValues as IEnumerable<Competition>).Contains(data))" />
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Competition" Property="Id" Title="ID">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Competition" Property="StartDate" Title="Дата начала">
            <Template Context="data">
                @data.StartDate
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Competition" Property="Name" Title="Название"/>
        <RadzenGridColumn TItem="Competition" Context="competition" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="300px">
            <Template Context="competition">
                <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args => EditRow(competition))" class="primary-button">
                </RadzenButton>
                <RadzenButton class="primary-button" Icon="account_circle" Text="Управлять" Size="ButtonSize.Medium" Click="@(()=>RedirectToManage(competition))">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(args => DeleteRow(competition))">
                </RadzenButton>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>


@code {
    object multipleValues;
    RadzenGrid<Competition> competitionGrid;
    List<Competition> competitions = new List<Competition>();

    protected override void OnInitialized()
    {
        competitions = CompetitionService.GetCompetitions();
    }
    void EditRow(Competition competition)
    {
        competitionGrid.EditRow(competition);
    }

    void OnUpdateRow(Competition competition)
    {
        var comp = competitions.FirstOrDefault(x => x.Id == competition.Id);
        comp.Name = competition.Name;
        

        competitionGrid.Reload();
    }

    void SaveRow(Competition competition)
    {
        competitionGrid.UpdateRow(competition);
    }

    void CancelEdit(Competition competition)
    {
        competitionGrid.CancelEditRow(competition);
    }

    void DeleteRow(Competition competition)
    {
        competitions.Remove(competition);
        competitionGrid.Reload();
    }

    void InsertRow()
    {
        competitionGrid.InsertRow(new Competition());
    }

    void OnCreateRow(Competition competition)
    {
        competition.Id = competitions.Max(x => x.Id) + 1;
        competitions.Add(competition);
    }
    void RedirectToManage(Competition competition)
    {
        NavigationManager.NavigateTo("manage/"+competition.Id+"/"+competition.Name);
    }
}

