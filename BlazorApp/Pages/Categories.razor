@page "/categories"

@using BlazorApp.Data
@inject BlazorApp.Data.CategoryService categoryService

<h1 class="main-header">Категории</h1>
<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="Категории">
            <table class="category-table">
                <tbody>
                    <tr class="table-cell">
                        <td rowspan="2">Id</td>
                        <td rowspan="2">Категория</td>
                        <td rowspan="2">Тип</td>
                        <td colspan="3">Возрастная группа</td>
                        <td colspan="3">
                            Весовая группа
                        </td>
                        <td rowspan="2">
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" @onclick="SetAdd">
                                Добавить
                            </button>
                        </td>
                    </tr>
                    <tr>
                        <td>Возраст</td>
                        <td>
                            От
                        </td>
                        <td>
                            До
                        </td>
                        <td>
                            Пол
                        </td>
                        <td>
                            От
                        </td>
                        <td>
                            До
                        </td>

                    </tr>
                    @foreach (var category in categories)
                    {
                        <tr>
                            <td>@category.Id</td>
                            <td>@category.Name</td>
                            <td>@category.Type</td>
                            <td>@category.Age</td>
                            <td>@category.AgeFrom</td>
                            <td>@category.AgeTo</td>
                            <td>@category.Sex</td>
                            <td>@category.WeightFrom</td>
                            <td>@category.WeightTo</td>
                            <td>
                                <button class="btn btn-danger" @onclick="()=>DeleteCategory(category)">Удалить</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-class" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="exampleModalLabel">Создать категорию</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="display:flex; justify-content:space-between;margin:30px">
                <div>
                    <h4>Возрастная группа</h4>
                    <RadzenListBox TValue="string" Data="ageGroups" Change="@(args=>OnChange(args,0))"></RadzenListBox>
                </div>
                <div>
                    <h4>Весовая группа</h4>
                    <RadzenListBox TValue="string" Data="weightGroups" Change="@(args=>OnChange(args,1))"></RadzenListBox>
                </div>
                <div>
                    <h4>Тип</h4>
                    <RadzenListBox TValue="string" Data="types" Change="@(args=>OnChange(args,2))"></RadzenListBox>
                </div>
                <div>
                    <h4>Пояс</h4>
                    <RadzenListBox TValue="object" Data="grades" Change="@(args=>OnChange(args,3))" Multiple="true"></RadzenListBox>
                </div>
            </div>
            <hr class="m-2" />
            <h4 style="margin-left:30px">Новая категория: @NewCategory[0] @NewCategory[1] @NewCategory[2] @NewCategory[3]</h4>
            <div class="modal-footer" style="margin-right:30px; padding-right:0px;">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


@code {
    bool open = false;
    string modalClass => open ? "modal fade show" : "modal fade";
    string displayMode => open ? "block" : "none";

    [CascadingParameter] public IModalService Modal { get; set; }

    Category Category = new Category();

    List<Category> categories = new List<Category>();
    List<string> weightGroups = new List<string>();
    List<string> ageGroups = new List<string>();
    List<string> types = new List<string>();
    List<string> grades = new List<string>();

    List<string> NewCategory = new List<string>() { "", "", "", "" };



    private void SetAdd()
    {

    }
    protected override void OnInitialized()
    {
        categories = categoryService.GetCategories();
        weightGroups = categoryService.GetWeightGroups();
        ageGroups = categoryService.GetAgeGroups();
        types = categoryService.GetTypes();
        grades = categoryService.GetGrades();
    }

    private void DeleteCategory(Category category)
    {
        categories.Remove(category);
    }
    async Task AddCategory()
    {

    }

    private void OnChange(object args, int number)
    {
        var str = args is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)args) : args.ToString();
        Console.WriteLine("");
        if (number == 0)
            NewCategory[number] = str.Split("/")[0];
        else NewCategory[number] = str;
    }

    private void ToggleModal()
    {
        open = !open;
        StateHasChanged();
    }

}
