@page "/manage/{Id}/{Name}"

@using BlazorApp.Models
@using BlazorApp.Data

@inject TooltipService tooltipService
@inject BlazorApp.Services.CompetitionService CompetitionService
@inject BlazorApp.Data.CategoryService CategoryService
@inject NavigationManager NavigationManager

<div class="main-header-div" style="display:flex;">
    <a @onclick="backUrl">
        <img src="next-button.png" class="back-button" />
    </a>
    <h1 class="main-header">Управление соревнованием @Name</h1>
</div>
<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="Участники">
            <RadzenButton Icon="add_circle_outline" class="primary-button m" Text="Добавить" Click="@AddCompetitor" />
            <RadzenButton Icon="done" class="primary-button m" Text="Активировать" Click="@Activate" />
            <RadzenButton Icon="description" class="primary-button m" Text="Загрузить из CSV" Click="@LoadFromCSV" />
            <RadzenGrid @ref="competitorGrid" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" AllowPaging="true" PageSize="10"
                        AllowSorting="true" Data="competitors" TItem="Competitor" AllowColumnResize="true" SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@multipleValues>
                <Columns>
                    <RadzenGridColumn TItem="Competitor" Width="40px" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <RadzenCheckBox TriState="false" TValue="bool" Value="@(competitors.Any(i => multipleValues != null && (multipleValues as IEnumerable<Competitor>).Contains(i)))"
                                            Change="@(args => multipleValues = args ? competitors : null)" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenCheckBox TriState="false" Value="@(multipleValues != null && (multipleValues as IEnumerable<Competitor>).Contains(data))" />
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Competitor" Property="Id" Title="ID" />
                    <RadzenGridColumn TItem="Competitor" Property="IKO" Title="Номер" />
                    <RadzenGridColumn TItem="Competitor" Property="FirstName" Title="Имя" />
                    <RadzenGridColumn TItem="Competitor" Property="LastName" Title="Фамилия" />
                    <RadzenGridColumn TItem="Competitor" Property="BirthDate" Title="Дата рождения">
                        <Template Context="data">
                            @data.DateOfBirth.ToShortDateString()
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Competitor" Property="Grade" Title="Пояс">
                        <Template Context="data">
                            @data.Grade.Name
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Competitor" Property="Country" Title="Страна" />
                    <RadzenGridColumn TItem="Competitor" Property="Region" Title="Регион" />
                    <RadzenGridColumn TItem="Competitor" Property="ClubName" Title="Клуб" />
                    <RadzenGridColumn TItem="Competitor" Property="Category" Title="Категория">
                        <Template Context="data">
                            @data.CompetitionCategory.Name
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Competitor" Property="Weight" Title="Вес" />
                    <RadzenGridColumn TItem="Competitor" Property="IsActive" Title="Активный">
                        <Template Context="data">
                            <RadzenCheckBox @bind-Value="data.IsRegistred" />
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Competitor" Context="competitor" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="120px">
                        <Template Context="competitor">
                            <RadzenButton Icon="edit" Size="ButtonSize.Medium" class="primary-button">
                            </RadzenButton>
                            <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(args => DeleteRow(competitor))">
                            </RadzenButton>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>

        </RadzenTabsItem>

        <RadzenTabsItem Text="Категории">
            <RadzenButton Text="Добавить" class="primary-button m" Click=@AddCompetitionCategory />
            <RadzenButton Text="Разбить" class="primary-button m" Click=@DivideCategory />
            <RadzenButton Text="Объеденить" class="primary-button m" Click=@MergeCategory />
            <RadzenGrid @ref="categoryGrid" AllowFiltering="true" FilterMode="FilterMode.Simple" AllowPaging="true" PageSize="10"
                        AllowSorting="true" Data="Categories" TItem="CompetitionCategory" SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@multipleValuesCategory>
                <Columns>
                    <RadzenGridColumn TItem="CompetitionCategory" Width="40px" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <RadzenCheckBox TriState="false" TValue="bool" Value="@(Categories.Any(i => multipleValuesCategory != null && (multipleValuesCategory as IEnumerable<CompetitionCategory>).Contains(i)))"
                                            Change="@(args => multipleValuesCategory = args ? Categories : null)" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenCheckBox TriState="false" Value="@(multipleValuesCategory != null && (multipleValuesCategory as IEnumerable<CompetitionCategory>).Contains(data))" />
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="CompetitionCategory" Property="Id" Title="ID" />
                    <RadzenGridColumn TItem="CompetitionCategory" Property="Name" Title="Наименование" />
                    <RadzenGridColumn TItem="CompetitionCategory" Title="Количество участников">
                        <Template Context="data">
                            @GetAmountOfCompetitors(data.Id)
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Жеребьевка(пули)">
            <RadzenButton Text="Генерировать все пули" class="primary-button m" />
            <RadzenAccordion>
                <Items>
                    @foreach (var category in Categories)
                    {
                        <RadzenAccordionItem Text=@category.Name Icon="accessibility">
                            <table class="table table-hover table-bordered">
                                <thead>
                                    <tr>
                                        <th rowspan="2" scope="col">ID</th>
                                        <th colspan="4" scope="col" style="width:240px;">
                                            Рейтинг
                                        </th>
                                        <th rowspan="2" scope="col">Имя</th>
                                        <th rowspan="2" scope="col">Фамилия</th>
                                        <th rowspan="2" scope="col">Дата рождения</th>
                                        <th rowspan="2" scope="col">Пояс</th>
                                        <th rowspan="2" scope="col">Страна</th>
                                        <th rowspan="2" scope="col">Регион</th>
                                        <th rowspan="2" scope="col">Клуб</th>

                                    </tr>
                                    <tr>
                                        <th style="width:60px;">Нету</th>
                                        <th style="width:60px;">1</th>
                                        <th style="width:60px;">2</th>
                                        <th style="width:60px;">3</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var competitor in competitors)
                                    {
                                        <tr>
                                            <td>@competitor.Id</td>
                                            <td colspan="4">
                                                <RadzenRadioButtonList TValue="int" Style="justify-content:space-around">
                                                    <Items>
                                                        <RadzenRadioButtonListItem Value="0" Style="margin-left:-8px;margin-right:7px;"></RadzenRadioButtonListItem>

                                                        <RadzenRadioButtonListItem Value="1" Style="margin-right:7px;"></RadzenRadioButtonListItem>

                                                        <RadzenRadioButtonListItem Value="2" Style="margin-right:7px;"></RadzenRadioButtonListItem>

                                                        <RadzenRadioButtonListItem Value="3" Style="margin-right:7px;"></RadzenRadioButtonListItem>
                                                    </Items>
                                                </RadzenRadioButtonList>
                                            </td>
                                            <td>@competitor.FirstName</td>
                                            <td>@competitor.LastName</td>
                                            <td>@competitor.DateOfBirth.ToShortDateString()</td>
                                            <td>@competitor.Grade</td>
                                            <td>@competitor.Country</td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <div>
                                @*ASd*@
                                <RadzenCheckBox TValue="bool" Style="margin: 10px;" />
                                <RadzenLabel Text="Бой за третье место" Component="CheckBox1" Style="margin:10px;" />
                                <RadzenButton Text="Генерировать пулю" class="primary-button m" />
                                <RadzenButton Text="Удалить пулю" class="primary-button m" />
                                <RadzenButton Text="Сохранить пулю" class="primary-button m" />
                                <RadzenButton Text="Следующая" class="primary-button m f-r" />
                                <RadzenButton Text="Предыдущая" class="primary-button m f-r" />
                            </div>
                        </RadzenAccordionItem>
                    }
                </Items>
            </RadzenAccordion>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Татами">
            <RadzenButton Text="Добавить татами" class="primary-button m" />
            <div class="row row-cols-3" style="justify-content:space-around">
                @foreach (var tatami in Tatamies)
                {
                    <div class="col" style="justify-content:center;margin:10px;">
                        <RadzenCard Style="width:500px;height:315px;margin:auto;">
                            <div class="card-header">
                                <h2 style="margin-bottom:0px;">Татами @tatami.Name</h2>

                            </div>
                            <div class="card-status">
                                <h6 style="margin-bottom:0px;">Количество боев *</h6>
                            </div>
                            <div class="card-content">
                                <table class="category-divide">
                                    <tbody>
                                        @foreach (var c in Categories)
                                        {
                                            <tr>
                                                <td style="border-bottom:1px solid gray;width:448px;">
                                                    @c.Name
                                                </td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer">
                                <RadzenButton class="button circle-button primary-button m" Icon="build" MouseEnter="@(args => ShowTooltip(args,"Настройки") )" Click="()=>ToTatamiSettings(tatami.Id)" />
                                <RadzenButton class="button circle-button primary-button m" Icon="av_timer" MouseEnter="@(args => ShowTooltip(args,"Таймер") )" Click="()=>ToTatamiTimer(tatami.Id)" />
                                <RadzenButton class="button circle-button primary-button m" Icon="computer" MouseEnter="@(args => ShowTooltip(args,"Компьютер") )" Click="()=>ToScoreBoard(tatami.Id)" />
                                <RadzenButton class="button circle-button primary-button m" Icon="list" MouseEnter="@(args => ShowTooltip(args,"Список") )" />
                                <RadzenButton class="button circle-button primary-button m" Icon="align_horizontal_left" MouseEnter="@(args => ShowTooltip(args,"Пули") )" />
                                <RadzenButton class="button circle-button primary-button m" Icon="face" MouseEnter="@(args => ShowTooltip(args,"Подготовка участников") )" />
                            </div>
                        </RadzenCard>
                    </div>
                }
            </div>
        </RadzenTabsItem>

        <RadzenTabsItem Text="Судьи">
            <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Simple" AllowPaging="true" PageSize="10"
                        AllowSorting="true" Data="Referees" TItem="Referee" AllowColumnResize="true">
                <Columns>
                    <RadzenGridColumn TItem="Referee" Property="Id" Title="Id" />
                    <RadzenGridColumn TItem="Referee" Property="FirstName" Title="Имя" />
                    <RadzenGridColumn TItem="Referee" Property="LastName" Title="Фамилия" />
                    <RadzenGridColumn TItem="Referee" Property="BirthDate" Title="Дата рождения">
                        <Template Context="data">
                            @data.DateOfBirth.ToShortDateString()
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="Referee" Title="Рейтинг" />
                    <RadzenGridColumn TItem="Referee" Title="Соревнования" />
                    <RadzenGridColumn TItem="Referee" />

                </Columns>
            </RadzenGrid>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>


@code {

    [Parameter]
    public string Name { get; set; }
    [Parameter]
    public string Id { get; set; }
    [CascadingParameter]
    public IModalService Modal { get; set; }

    object multipleValues;
    object multipleValuesCategory;
    RadzenGrid<Competitor> competitorGrid;
    RadzenGrid<CompetitionCategory> categoryGrid;

    List<Referee> Referees = new List<Referee>();
    List<Competitor> competitors = new List<Competitor>();
    List<CompetitionCategory> Categories = new List<CompetitionCategory>();
    List<Grade> Grades = new List<Grade>();
    List<Tatami> Tatamies = new List<Tatami>();

    int GetAmountOfCompetitors(int Id)
    {
        return CategoryService.GetAmountOfCompetitors(Id);
    }

    protected override void OnInitialized()
    {
        competitors = CompetitionService.GetCompetitors();
        Grades = CategoryService.GetGrades();
        Categories = CompetitionService.GetCompetitionCategories(int.Parse(Id));
        Tatamies = CompetitionService.GetTatamis();
        Referees = CompetitionService.GetReferees();
    }

    void DeleteRow(Competitor competitor)
    {
        competitors.Remove(competitor);
        competitorGrid.Reload();
    }

    void Activate()
    {
        if (multipleValues != null)
        {
            var selectedIds = (multipleValues as IEnumerable<Competitor>).Select(x => x.Id).ToList();
            foreach (var id in selectedIds)
            {
                competitors.FirstOrDefault(x => x.Id == id).IsRegistred = true;
            }
            competitorGrid.Reload();
        }
    }

    async void LoadFromCSV()
    {
        var form = Modal.Show<UploadCsv>("Загрузить файл");
        var result = await form.Result;
        if (result.Data != null)
        {
            competitors.AddRange((List<Competitor>)result.Data);
            await competitorGrid.Reload();
        }
    }

    async Task AddCompetitor()
    {
        var form = Modal.Show<AddCompetitorForm>("Добавление участника соревнования");
        var result = await form.Result;
        if (result.Data != null)
        {
            competitors.Add(result.Data as Competitor);
            await competitorGrid.Reload();
        }
    }

    async Task AddCompetitionCategory()
    {
        var form = Modal.Show<AddCompetitionCategoryForm>("Добавить соревновательную категорию");
        var result = await form.Result;
        if (result.Data != null)
        {
            Categories.Add(result.Data as CompetitionCategory);
            await categoryGrid.Reload();
        }
    }

    void ShowTooltip(ElementReference elementReference, string message, TooltipOptions options = null) => tooltipService.Open(elementReference, message, options);

    async Task DivideCategory()
    {
        if ((multipleValuesCategory as IEnumerable<SportCategory>).ToList().Count == 1)
        {
            ModalParameters parameters = new ModalParameters();
            parameters.Add(nameof(CompetitionCategory), (multipleValuesCategory as IEnumerable<SportCategory>).ToList()[0]);

            var form = Modal.Show<DivideCompetitionCategory>("Разбиение соревновательной категории", parameters);
            var result = await form.Result;
            if (result.Data != null)
            {
                Categories.AddRange((List<CompetitionCategory>)result.Data);
                await categoryGrid.Reload();
            }
        }
    }

    void MergeCategory()
    {
        if ((multipleValuesCategory as IEnumerable<SportCategory>).ToList().Count > 1)
        {
            var s = (multipleValuesCategory as IEnumerable<SportCategory>).ToList();

            categoryGrid.Reload();
        }
    }

    void ToTatamiSettings(int Id)
    {
        NavigationManager.NavigateTo("/manage/"+this.Id+"/"+this.Name+"/settings/"+Id);
    }

    void ToTatamiTimer(int Id)
    {
        NavigationManager.NavigateTo("/manage/" + this.Id + "/" + this.Name + "/timer/" + Id);
    }

    void ToScoreBoard(int Id)
    {
        NavigationManager.NavigateTo("/manage/" + this.Id + "/" + this.Name + "/scoreboard/" + Id);
    }

    void backUrl()
    {
        NavigationManager.NavigateTo("/competitions");
    }
}
