@page "/sportsmen"

@using BlazorApp.Data
@using BlazorApp.Models
@inject BlazorApp.Services.SportsmenService sportsmenService
@inject BlazorApp.Data.CategoryService categoryService
<div class="main-header-div">
<h1 class="main-header">Спортсмены</h1>
    </div>
<RadzenButton Icon="add_circle_outline" style="margin: 10px;background-color: #4287f5;" Text="Добавить" Click="@InsertRow" />
<RadzenGrid @ref="sportsmenGrid" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced" AllowPaging="true" PageSize="10"
            AllowSorting="true" Data="@sportsmen" TItem="Sportsman" AllowColumnResize="true" SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@multipleValues
            RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow">
    <Columns>
        <RadzenGridColumn TItem="Sportsman" Width="40px" Sortable="false" Filterable="false">
            <HeaderTemplate>
                <RadzenCheckBox TriState="false" TValue="bool" Value="@(sportsmen.Any(i => multipleValues != null && (multipleValues as IEnumerable<Sportsman>).Contains(i)))"
                                Change="@(args => multipleValues = args ? sportsmen : null)" />
            </HeaderTemplate>
            <Template Context="data">
                <RadzenCheckBox TriState="false" Value="@(multipleValues != null && (multipleValues as IEnumerable<Sportsman>).Contains(data))" />
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="Id" Title="ID">

        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="IKO" Title="IKO">
            <EditTemplate Context="sportsman">
                <RadzenNumeric @bind-Value="sportsman.IKO" Style="width:100%" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="LastName" Title="Фамилия">
            <EditTemplate Context="sportsman">
                <RadzenTextBox @bind-Value="sportsman.LastName" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="FirstName" Title="Имя">
            <EditTemplate Context="sportsman">
                <RadzenTextBox @bind-Value="sportsman.FirstName" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="BirthDate" Title="Дата рождения">
            <EditTemplate Context="sportsman">
                <RadzenDatePicker @bind-Value="sportsman.BirthDate" Style="width:100%" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="Age" Title="Возраст">
            <EditTemplate Context="sportsman">
                <RadzenNumeric @bind-Value="sportsman.Age" Style="width:100%" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="Weight" Title="Вес">
            <EditTemplate Context="sportsman">
                <RadzenNumeric @bind-Value="sportsman.Weight" Style="width:100%" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="Grade" Title="Пояс">
            <EditTemplate Context="sportsman">
                <RadzenDropDown Data="grades" TValue="string" @bind-Value="sportsman.Grade" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="Sex" Title="Пол">
            <EditTemplate Context="sportsman">
                <RadzenDropDown Data="sexes" TValue="string" @bind-Value="sportsman.Sex" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Property="Trainer" Title="Тренер">
            <EditTemplate Context="sportsman">
                <RadzenTextBox @bind-Value="sportsman.Trainer" />
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Context="sportsman" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
            <Template Context="sportsman">
                <RadzenButton Icon="edit" Size="ButtonSize.Small" Click="@(args => EditRow(sportsman))">
                </RadzenButton>
            </Template>
            <EditTemplate Context="sportsman">
                <RadzenButton Icon="save" Size="ButtonSize.Small" Click="@((args) => SaveRow(sportsman))">
                </RadzenButton>
                <RadzenButton Icon="cancel" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Secondary" Click="@((args) => CancelEdit(sportsman))">
                </RadzenButton>
            </EditTemplate>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Sportsman" Context="sportsman" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
            <Template Context="sportsman">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteRow(sportsman))">
                </RadzenButton>
            </Template>
            <EditTemplate Context="sportsman">
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(args => DeleteRow(sportsman))">
                </RadzenButton>
            </EditTemplate>
        </RadzenGridColumn>

    </Columns>
</RadzenGrid>

@code {
    object multipleValues;

    RadzenGrid<Sportsman> sportsmenGrid;

    List<Sportsman> sportsmen = new List<Sportsman>();
    List<string> grades = new List<string>();
    List<string> sexes = new List<string>()
    {
            "МУЖ",
            "ЖЕН"
        };

    protected override void OnInitialized()
    {
        sportsmen = sportsmenService.GetSportsmen();
        grades = categoryService.GetGrades();
    }

    void EditRow(Sportsman sportsman)
    {
        sportsmenGrid.EditRow(sportsman);
    }

    void OnUpdateRow(Sportsman sportsman)
    {
        sportsmen.RemoveAll(x => x.Id == sportsman.Id);
        sportsman.Id = sportsmen.Max(x => x.Id) + 1;
        sportsmen.Add(sportsman);
        sportsmenGrid.Reload();
    }

    void SaveRow(Sportsman sportsman)
    {
        sportsmenGrid.UpdateRow(sportsman);
    }

    void CancelEdit(Sportsman sportsman)
    {
        sportsmenGrid.CancelEditRow(sportsman);
    }

    void DeleteRow(Sportsman sportsman)
    {
        sportsmen.Remove(sportsman);
        sportsmenGrid.Reload();
    }

    void InsertRow()
    {
        sportsmenGrid.InsertRow(new Sportsman());
    }

    void OnCreateRow(Sportsman sportsman)
    {
        sportsmen.Add(sportsman);
    }
}
