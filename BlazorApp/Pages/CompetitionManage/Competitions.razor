@page "/competitions"

@using Models
@using Dialogs
@using Dialogs.CompetitionForms

@inject BlazorApp.Services.CompetitionService CompetitionService
@inject NavigationManager NavigationManager

<div class="main-header-div">
    <h1 class="main-header">Соревнования</h1>
</div>

<RadzenButton Icon="add_circle_outline" class="primary-button m" Text="Добавить" Click="@AddCompetition" />
<RadzenGrid @ref="competitionGrid" AllowFiltering="true"  AllowPaging="true" PageSize="10"
            AllowSorting="true" Data="competitions" TItem="Competition" AllowColumnResize="true" SelectionMode="DataGridSelectionMode.Multiple" @bind-Value=@multipleValues>
    <Columns>
        <RadzenGridColumn TItem="Competition" Width="40px" Sortable="false" Filterable="false">
            <HeaderTemplate>
                <RadzenCheckBox TriState="false" TValue="bool" Value="@(competitions.Any(i => multipleValues != null && (multipleValues as IEnumerable<Competition>).Contains(i)))"
                                Change="@(args => multipleValues = args ? competitions : null)" />
            </HeaderTemplate>
            <Template Context="data">
                <RadzenCheckBox TriState="false" Value="@(multipleValues != null && (multipleValues as IEnumerable<Competition>).Contains(data))" />
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Competition" Property="Id" Title="ID">
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Competition" Property="StartDate" Title="Дата начала">
            <Template Context="data">
                @data.StartDate
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Competition" Property="Name" Title="Название"/>
        <RadzenGridColumn TItem="Competition" Context="competition" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="300px">
            <Template Context="competition">
                <RadzenButton Icon="edit" Size="ButtonSize.Medium" Click="@(args => EditCompetition(competition.Id))" class="primary-button">
                </RadzenButton>
                <RadzenButton class="primary-button" Icon="account_circle" Text="Управлять" Size="ButtonSize.Medium" Click="@(()=>RedirectToManage(competition))">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Medium" Click="@(args => DeleteCompetition(competition.Id))">
                </RadzenButton>
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>


@code {
    object multipleValues;
    RadzenGrid<Competition> competitionGrid;
    List<Competition> competitions = new List<Competition>();

    [CascadingParameter]
    public IModalService Modal { get; set; }

    protected override void OnInitialized()
    {
        competitions = CompetitionService.GetCompetitions();
    }

    async void AddCompetition()
    {
        var form = Modal.Show<AddCompetition>("Создание соревнования");
        var result = await form.Result;

        if (result.Data != null)
        {
            CompetitionService.CreateCompetition(result.Data as Competition);
        }
    }

    async void EditCompetition(int Id)
    {
        var form = Modal.Show<EditCompetition>("Редактирование соревнования");
        var result = await form.Result;

        if (result.Data != null)
        {
            CompetitionService.EditCompetition(result.Data as Competition);
        }
    }

    async void DeleteCompetition(int Id)
    {
        var form = Modal.Show<DeleteForm>("Удаление соревнования");
        var result = await form.Result;

        if (!result.Cancelled)
        {
            CompetitionService.DeleteCompetition(Id);
        }
    }

    void RedirectToManage(Competition competition)
    {
        NavigationManager.NavigateTo("manage/"+competition.Id+"/"+competition.Name);
    }
}

