@using BlazorApp.Models

@inject BlazorApp.Data.CategoryService CategoryService
@inject BlazorApp.Services.SportsmenService SportsmenService

<div class="container" style="display:flex;">
    <div class="col">
        <RadzenFieldset Text="Личные данные">
            <div class="row">

                <RadzenTextBox Placeholder="Имя" class="add-competitor-form" @bind-Value="Sportsman.FirstName"></RadzenTextBox>
            </div>
            <div class="row">
                <RadzenTextBox Placeholder="Фамилия" @bind-Value="Sportsman.LastName" class="add-competitor-form"></RadzenTextBox>
            </div>
            <div class="row" style="display:flex;vertical-align:central;justify-content:center;">
                <h4 style="margin-top:10px">М</h4>
                <RadzenSwitch @bind-Value="switcher" Style="margin:7px;" />
                <h4 style="margin-top:10px">Ж</h4>
            </div>

            <div class="row">
                <RadzenNumeric TValue="int?" class="add-competitor-form" Placeholder="Стартовый номер"></RadzenNumeric>
            </div>
            <div class="row">
                <RadzenDatePicker class="add-competitor-form" Placeholder="Дата рождения" @bind-Value="Sportsman.DateOfBirth"></RadzenDatePicker>
            </div>
            <div class="row">
                <RadzenDropDown Data=@(Grades.Select(x=>x.Name)) class="add-competitor-form" Placeholder="Пояс" @bind-Value="GradeName">

                </RadzenDropDown>
            </div>

            <div class="row">
                <RadzenNumeric class="add-competitor-form" Placeholder="Возраст" @bind-Value="Sportsman.Age"></RadzenNumeric>
            </div>
            <div class="row">
                <RadzenNumeric class="add-competitor-form" Placeholder="Вес" @bind-Value="Sportsman.Weight"></RadzenNumeric>
            </div>
        </RadzenFieldset>
        <div class="row">
            <RadzenButton Text="Сохранить" class="primary-button m add-competitor-form"></RadzenButton>
            <RadzenButton Text="Вернуться назад" class="primary-button m add-competitor-form"></RadzenButton>
            <RadzenButton Text="Отменить изменения" class="primary-button m add-competitor-form"></RadzenButton>
        </div>
    </div>
    <div class="col">
        <RadzenFieldset Text="Спортивный клуб">
            <div class="row">
                <RadzenTextBox Placeholder="Название" class="add-competitor-form" @bind-Value="Sportsman.SportClub.Name"></RadzenTextBox>
            </div>
            <div class="row">
                <RadzenTextBox Placeholder="Организация" class="add-competitor-form" @bind-Value="Sportsman.SportClub.Organization"></RadzenTextBox>
            </div>
        </RadzenFieldset>
        <RadzenFieldset Text="Тренер">
            <div class="row">
                <RadzenTextBox Placeholder="Имя" class="add-competitor-form" @bind-Value="Sportsman.Trainer.FirstName"></RadzenTextBox>
            </div>
            <div class="row">
                <RadzenTextBox Placeholder="Фамилия" class="add-competitor-form" @bind-Value="Sportsman.Trainer.LastName"></RadzenTextBox>
            </div>
            <div class="row">
                <RadzenDatePicker @bind-Value="Sportsman.Trainer.DateOfBirth" class="add-competitor-form" Placeholder="Дата рождения" ></RadzenDatePicker>
            </div>
        </RadzenFieldset>
    </div>

</div>

@code {
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter]
    public int Id { get; set; }
    
    Sportsman Sportsman = new Sportsman();
    List<Grade> Grades = new List<Grade>();

    string GradeName;
    bool switcher;
    //int Weight;
    protected override void OnInitialized()
    {
        Grades = CategoryService.GetGrades();
        Sportsman = SportsmenService.GetSportsmanById(this.Id);
    }

    async Task SubmitForm()
    {
        string sex = switcher ? "М" : "Ж";
        Sportsman.Sex = CategoryService.GetSexByName(sex);
        Sportsman.Grade = CategoryService.GetGradeByName(GradeName);
        
        await BlazoredModal.CloseAsync(ModalResult.Ok(Sportsman));
    }

    async Task Cancel() => await BlazoredModal.CancelAsync();
}
